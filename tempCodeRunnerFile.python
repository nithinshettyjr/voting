# Import libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Step 1: Load dataset
df = pd.read_csv("Housing.csv")  # Ensure this file is in your working directory

# Step 2: Preprocessing
print("First 5 rows of the dataset:")
print(df.head())
print("\nColumns in the dataset:", df.columns)

# Drop rows with missing values (if any)
df = df.dropna()

# Step 3: Separate target and features
y = df['price']  # Target variable
X = df.drop('price', axis=1)  # Features

# Step 4: Convert categorical variables to numeric using one-hot encoding
X = pd.get_dummies(X, drop_first=True)

# Step 5: Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 7: Predict on test set
y_pred = model.predict(X_test)

# Step 8: Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nModel Evaluation Metrics:")
print(f"Mean Absolute Error (MAE): {mae}")
print(f"Mean Squared Error (MSE): {mse}")
print(f"RÂ² Score: {r2}")

# Step 9: Display model coefficients
print("\nModel Coefficients:")
coefficients = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient'])
print(coefficients)